% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nested_df.R
\name{filter_in_sub}
\alias{filter_in_sub}
\title{Filter within nested data frames}
\usage{
filter_in_sub(.data, data_col_name, ..., handle_nulls = FALSE,
  drop_empty = FALSE, scoped_in = TRUE)
}
\arguments{
\item{.data}{A data frame / tibble}

\item{data_col_name}{The column name of the nested data frames, bare or as a string.}

\item{\dots}{Logical predicates defined in terms of the variables in \code{.data}. Multiple conditions are combined with \code{&}. Only rows where the condition evaluates to \code{TRUE} are kept. See \code{\link[dplyr]{filter}} for more information.}

\item{handle_nulls}{If \code{TRUE}, drops rows with \code{NULL} data frames. Otherwise will throw an error if they are encountered.}

\item{drop_empty}{If \code{TRUE}, will drop rows that, after filtering, have no rows.}

\item{scoped_in}{A boolean indicating whether the summary functions are scoped within the nested data frames alone (\code{TRUE}) or whether they also have access to the higher-level data frame. Changing this value can radically change the behavior.}
}
\value{
A data frame / tibble
}
\description{
Applies \code{\link[dplyr]{filter}} within nested data frames.
}
